{"ast":null,"code":"var _jsxFileName = \"/home/v.zgirskaya@godeltech.com/Desktop/Pokemon/src/GetPokemonInfo.jsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport NewCommentInput from \"./NewCommentInput\";\n\nclass GetPokemonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = props.url;\n    this.name = props.name;\n    this.state = {\n      data: {},\n      status: false\n    };\n    this.className = \"elem-info\";\n  }\n\n  async componentDidMount() {\n    let response = await fetch(this.url);\n\n    if (response.ok) {\n      let jsn = await response.json();\n      console.log(jsn); // NEW METHOD START !!!!!!\n\n      let new_response = await fetch(\"/pokemon/\".concat(this.props.name), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(jsn)\n      });\n      let result = await new_response.json(); // NEW METHOD FINISHED !!!!!!\n\n      let data = {\n        id: result.id,\n        name: result.name,\n        weight: jsn.weight,\n        height: jsn.height,\n        base_experience: jsn.base_experience,\n        comments: result.comments\n      };\n      this.setState({\n        data: data,\n        status: true\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, prevContext) {\n    if (prevProps.name !== this.props.name) {\n      let response = await fetch(this.props.url);\n\n      if (response.ok) {\n        let jsn = await response.json(); // NEW METHOD START !!!!!!\n\n        let new_response = await fetch('/pokemon', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n          },\n          body: JSON.stringify(jsn)\n        });\n        let result = await new_response.json(); // NEW METHOD FINISHED !!!!!!\n\n        let data = {\n          id: result.id,\n          name: result.name,\n          weight: jsn.weight,\n          height: jsn.height,\n          base_experience: jsn.base_experience,\n          comments: result.comments\n        };\n        this.setState({\n          data: data\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.status) {\n      return React.createElement(\"div\", {\n        className: this.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Name: \", this.state.data.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Weight: \", this.state.data.weight), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Height: \", this.state.data.height), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"BE: \", this.state.data.base_experience), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(NewCommentInput, {\n        user_id: this.state.data.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Comments: \", this.state.data.comments));\n    } else {\n      return React.createElement(\"div\", {\n        className: this.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Please Wait\"));\n    }\n  }\n\n}\n\nexport default GetPokemonInfo;","map":{"version":3,"sources":["/home/v.zgirskaya@godeltech.com/Desktop/Pokemon/src/GetPokemonInfo.jsx"],"names":["React","NewCommentInput","GetPokemonInfo","Component","constructor","props","url","name","state","data","status","className","componentDidMount","response","fetch","ok","jsn","json","console","log","new_response","method","headers","body","JSON","stringify","result","id","weight","height","base_experience","comments","setState","componentDidUpdate","prevProps","prevState","prevContext","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport NewCommentInput from \"./NewCommentInput\";\n\n\nclass GetPokemonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = props.url;\n    this.name = props.name;\n    this.state = { data: {}, status: false };\n    this.className = \"elem-info\";\n  }\n\n  async componentDidMount() {\n    let response = await fetch(this.url);\n\n    if (response.ok) {\n      let jsn = await response.json();\n      console.log(jsn)\n      // NEW METHOD START !!!!!!\n      let new_response = await fetch(`/pokemon/${this.props.name}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(jsn)\n      });\n      let result = await new_response.json();\n      // NEW METHOD FINISHED !!!!!!\n      let data = { id: result.id, name: result.name, weight: jsn.weight, height: jsn.height, base_experience: jsn.base_experience, comments: result.comments }\n      this.setState({ data: data, status: true });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, prevContext) {\n    if (prevProps.name !== this.props.name) {\n\n      let response = await fetch(this.props.url);\n\n      if (response.ok) {\n        let jsn = await response.json();\n        // NEW METHOD START !!!!!!\n        let new_response = await fetch('/pokemon', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n          },\n          body: JSON.stringify(jsn)\n        });\n        let result = await new_response.json();\n        // NEW METHOD FINISHED !!!!!!\n        let data = { id: result.id, name: result.name, weight: jsn.weight, height: jsn.height, base_experience: jsn.base_experience, comments: result.comments }\n        this.setState({ data: data });\n      }\n    }\n\n  }\n\n\n\n\n\n\n  render() {\n    if (this.state.status) {\n      return (\n        <div className={this.className}>\n          <p>Name: {this.state.data.name}</p>\n          <p>Weight: {this.state.data.weight}</p>\n          <p>Height: {this.state.data.height}</p>\n          <p>BE: {this.state.data.base_experience}</p>\n          <p><NewCommentInput user_id={this.state.data.id} /></p>\n          <p>Comments: {this.state.data.comments}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className={this.className}>\n          <p>Please Wait</p>\n        </div>\n      )\n    }\n  }\n\n\n\n}\n\nexport default GetPokemonInfo;\n"]},"metadata":{},"sourceType":"module"}